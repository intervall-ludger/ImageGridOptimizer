name: Release Workflow

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        run: cargo build --release

      - name: Set artifact path
        id: set_artifact_path
        shell: bash
        run: |
          if [ "Windows" = "Windows" ]; then
            echo "::set-output name=path::target/release/ImageGridOptimizer.exe"
          else
            echo "::set-output name=path::target/release/ImageGridOptimizer"
          fi


      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-binary
          path: ${{ steps.set_artifact_path.outputs.path }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            Release of version ${{ github.ref }}.

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts
          asset_name: binary-${{ matrix.os }}.zip
          asset_content_type: application/zip
